blueprint:
  name: View Assist - Device Functions
  description: Various device functions for the View Assist Satellites (View Assist
    devicefunctions v 1.2.3)
  domain: automation
  input:
    language:
      name: Language
      description: The desired spoken language
      default: en
      selector:
        language:
          languages: [de, en, uk]
    repeat_command:
      name: Repeat Command
      description: The phrase you want to use to trigger repeating last spoken response
      default: (what did you say  | [please] say that again [please] | [please] repeat
        that [please])
    mode_command:
      name: Mode Command
      description: The command to use to trigger the mode change automation
      default: (set mode [to] {mode} | turn on {mode} mode | set [to] {mode} mode)
    view_command:
      name: View Command
      description: The command to use to trigger the view change automation
      default: (set view [to] {view} | change [to] {view} view | set [to] {view} view)
    dnd_command:
      name: Do Not Disturb Command
      description: The command to use to trigger turning off DND mode
      default: (set do not disturb [mode] [to] off | turn off do not disturb [mode] | end do not disturb [mode] | cancel do not disturb [mode])
    set_volume:
      name: Set Volume Command
      description: The command to use to set volume level directly
      default: "[set | turn] [the] volume [to] {level}"
    adjust_volume:
      name: Adjust Volume Command
      description: The command to use to set volume level by step
      default: turn {up_down} [the] volume
    mute_volume:
      name: Mute Volume Command
      description: The command to use to mute audio
      default: mute [the] [volume]
    unmute_volume:
      name: Unmute Volume Command
      description: The command to use to unmute audio
      default: unmute [the] [volume]
    stop_music:
      name: Stop Music Command
      description: The command to use to stop music playback
      default: stop [the] music
    modes:
      name: Modes
      description: The available modes (do not include do not disturb)
      default: "['normal', 'night', 'hold', 'cycle']"
    views:
      name: Views
      description: The available views as named on your dashboard
      default: "['clock', 'weather', 'info', 'infopic']"
trigger:
- platform: conversation
  command: !input repeat_command
  id: repeat
- platform: conversation
  command: !input mode_command
  id: mode
- platform: conversation
  command: !input dnd_command
  id: dndoff
- platform: conversation
  command: !input view_command
  id: view
- platform: conversation
  command: !input set_volume
  id: set_volume
- platform: conversation
  command: !input adjust_volume
  id: adjust_volume
- platform: conversation
  command: !input mute_volume
  id: mute_volume
- platform: conversation
  command: !input unmute_volume
  id: unmute_volume
- platform: conversation
  command: !input stop_music
  id: stop_music
condition: []
action:
- variables:
    target_satellite_device: "{{ view_assist_entity(trigger.device_id) }}"
    target_mediaplayer_device: "{{ state_attr(target_satellite_device, 'mediaplayer_device')}}"
    target_musicplayer_device: "{{ state_attr(target_satellite_device, 'musicplayer_device')}}"
    target_satellite_device_type: "{{ state_attr(target_satellite_device, 'type')}}"
    language: !input language
    modes: !input modes
    views: !input views
    last_said: "{{ state_attr(target_satellite_device, 'last_said') | default('', true) }}"
    translations:
      en:
        responses:
          repeat: "I said {last_said}"
          repeat_remove: "I said"
          do_not_disturb_off: "Do not disturb mode is now off"
          mode_success: "Setting mode to {mode}"
          mode_failure_device: "Sorry.  {mode} is not a valid mode for this device"
          mode_failure_unrecognized: "Sorry.  {mode} is not a valid mode. Please try {{ modes }}."
      de:
        responses:
          repeat: "Ich sagte {last_said}"
          repeat_remove: "Ich sagte"
          do_not_disturb_off: "Der Bitte nicht stören Modus ist jetzt aus"
          mode_success: "Setze Modus auf {mode}"
          mode_failure_device: "Entschuldige. aber {mode} ist kein gültiger Modus für dieses Gerät"
          mode_failure_unrecognized: "Entschuldige, aber {mode} ist kein gültiger Modus. Bitte versuche es mit {{ modes }}."
      uk:
        responses:
          repeat: "Я сказав {last_said}"
          repeat_remove: "Я сказав"
          do_not_disturb_off: "Режим 'Не турбувати' вимкнено"
          mode_success: "Встановлення режиму на {mode}"
          mode_failure_device: "Вибачте. {mode} не є дійсним режимом для цього пристрою"
          mode_failure_unrecognized: "Вибачте. {mode} не є дійсним режимом. Будь ласка, спробуйте {{ modes }}."
- choose:
  - conditions:
    - condition: trigger
      id:
      - repeat
    sequence:
      - variables:
          conversation_response: "{{ translations[language]['responses']['repeat'].replace('{last_said}', last_said | replace(translations[language]['responses']['repeat_remove'], '')) }}"
      - set_conversation_response: "{{ conversation_response }}"
      - action: view_assist.set_state
        target:
          entity_id: "{{ target_satellite_device }}"              
        data:     
          last_said: "{{ conversation_response }}"    
  - conditions:
    - condition: trigger
      id:
      - dndoff
    sequence:
      - action: view_assist.set_state
        target:
          entity_id: "{{ target_satellite_device }}"
        data:
          do_not_disturb: false
      - variables:
          conversation_response: "{{ translations[language]['responses']['do_not_disturb_off'] }}"
      - set_conversation_response: "{{ conversation_response }}"
      - action: view_assist.set_state
        target:
          entity_id: "{{ target_satellite_device }}"              
        data:     
          last_said: "{{ conversation_response }}"                    
  - conditions:
    - condition: trigger
      id:
      - mode
    sequence:
    - if:
      - condition: template
        value_template: "{{ trigger.slots.mode|lower in modes or trigger.slots.mode|lower in ['do
          not disturb'] }}"
      then:
      - variables:
          conversation_response: "{{ translations[language]['responses']['mode_success'].replace('{mode}', trigger.slots.mode) }}"
      - set_conversation_response: "{{ conversation_response }}"
      - action: view_assist.set_state
        target:
          entity_id: "{{ target_satellite_device }}"              
        data:     
          last_said: "{{ conversation_response }}" 
      - choose:
        - conditions:
          - condition: template
            value_template: "{{ trigger.slots.mode|lower in modes }}"
          sequence:
          - if:
            - condition: template
              value_template: "{% if target_satellite_device_type == 'audio_only'
                %}true{% else %}false{% endif %}"
            then:
            - variables:
                conversation_response: "{{ translations[language]['responses']['mode_failure_device'].replace('{mode}', trigger.slots.mode) }}"
            - set_conversation_response: "{{ conversation_response }}"
            - action: view_assist.set_state
              target:
                entity_id: "{{ target_satellite_device }}"              
              data:     
                last_said: "{{ conversation_response }}" 
            else:
            - action: view_assist.set_state
              target:
                entity_id: "{{ target_satellite_device }}"
              data:
                mode: "{{ trigger.slots.mode|lower }}"
        - conditions:
          - condition: template
            value_template: "{{ trigger.slots.mode in ['do not disturb'] }}"
          sequence:
            - action: view_assist.set_state
              target:
                entity_id: "{{ target_satellite_device }}"
              data:
                do_not_disturb: true
      else:
      - variables:
          conversation_response: "{{ translations[language]['responses']['mode_failure_unrecognized'].replace('{mode}', trigger.slots.mode) }}"
      - set_conversation_response: "{{ conversation_response }}"
      - action: view_assist.set_state
        target:
          entity_id: "{{ target_satellite_device }}"              
        data:     
          last_said: "{{ conversation_response }}" 
  - conditions:
    - condition: trigger
      id:
      - view
    sequence:
    - if:
      - condition: template
        value_template: "{% if target_satellite_device_type != 'audio_only' %}true{%
          else %}false{% endif %}"
      then:
      - set_conversation_response: Switching view to {{ trigger.slots.view }} view
        enabled: true
      - action: view_assist.navigate
        data:
          device: "{{ target_satellite_device }}"
          path: "{{ trigger.slots.view | lower }}"
      else:
      - set_conversation_response: "Sorry.  {{ trigger.slots.view }} is not a valid view. "
  - conditions:
    - condition: trigger
      id:
      - set_volume
    sequence:
    - action: media_player.volume_set
      data:
        volume_level: "{% if trigger.id == \"set_volume\" %} 
          {% if trigger.slots.level.endswith('%') %}
            {{ (trigger.slots.level |replace('%',' ') | int)/100 }}
          {% else %}
            {{ (trigger.slots.level | int)/10 }}
          {% endif %}
          {% endif %}"
      target:
        entity_id: "{{ target_mediaplayer_device }}"
    - set_conversation_response: The volume was set to {{ trigger.slots.level }}
      enabled: true
  - conditions:
    - condition: trigger
      id:
      - adjust_volume
    sequence:
    - service: "{% if trigger.slots.up_down == \"down\" %} media_player.volume_down {% endif %}
        {% if trigger.slots.up_down == \"up\" %} media_player.volume_up {% endif %}"
      target:
        entity_id: "{{ target_mediaplayer_device }}"
    - set_conversation_response: The volume has been turned {{ trigger.slots.up_down }}
  - conditions:
    - condition: trigger
      id:
      - mute_volume
    sequence:
    - service: media_player.volume_mute
      data:
        is_volume_muted: true
      target:
        entity_id: "{{ target_mediaplayer_device }}"
    - set_conversation_response: ""
  - conditions:
    - condition: trigger
      id:
      - unmute_volume
    sequence:
    - service: media_player.volume_mute
      data:
        is_volume_muted: false
      target:
        entity_id: "{{ target_mediaplayer_device }}"
    - set_conversation_response: Sound has been restored
  - conditions:
    - condition: trigger
      id:
      - stop_music
    sequence:
    - target:
        entity_id:
        - "{{ target_musicplayer_device }}"
      data: {}
      action: media_player.media_stop
    - action: view_assist.set_state
      target:
        entity_id: "{{ target_satellite_device }}"
      data:
        mode: normal               
    - set_conversation_response: ""
