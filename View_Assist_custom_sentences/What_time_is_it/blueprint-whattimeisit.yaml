# View Assist - What time is it (v 1.0.0)
# Written by - Dinki
blueprint:
  name: View Assist - What time is it
  description: Ask Assist for time, date and day of the week and receive response (View Assist whattimeisit v 1.0.0)
  domain: automation
  input:
    language:
      name: Language
      description: The desired spoken language
      default: en
      selector:
        language:
          languages: [de, en, es, fr, it, nl, uk]
    command_prompt_time:
      name: Command Prompt Time
      description: The phrase you want to use to trigger the request for time
      default: "[What] [whats] [is] [the] time [is it]"
    command_prompt_date:
      name: Command Prompt Date
      description: The phrase you want to use to trigger the request for date
      default: "(What is the date | what day is it | what is today)"
    command_prompt_dayofweek:
      name: Command Prompt Date
      description: The phrase you want to use to trigger the request for day of the week
      default: "([What('s)] [is] [the] day of the week [is it] | What day of the week is it)"
    view:
      name: Dashboard view
      description: The View Assist dashboard view to use for displaying time and date (example /dashboard-viewassist/clock)
      default: "/view-assist/clock"
alias: View Assist  - What time is it
description: ""
trigger:
  - platform: conversation
    command:
      - !input command_prompt_time
    id: time
  - platform: conversation
    command:
      - !input command_prompt_date
    id: date
  - platform: conversation
    command:
      - !input command_prompt_dayofweek
    id: dayofweek
action:
  - variables:
      target_satellite_device: "{{ view_assist_entity(trigger.device_id) }}"
      target_mediaplayer_device: "{{ state_attr(target_satellite_device, 'mediaplayer_device')}}"
      target_satellite_device_type: "{{ state_attr(target_satellite_device, 'type')}}"
      view: !input view
      language: !input language
      time: "{{ now().strftime('%H:%M') if state_attr(target_satellite_device, 'use_24_hour_time') else now().strftime('%-I:%M %p') }}"
      day_of_week: "{{ now().strftime('%A') }}"
      date: "{{ now().strftime('%A %B %-d') }}"
      day_of_month: "{{ now().strftime('%-d') }}"
      month: "{{ now().strftime('%B') }}"
      year: "{{ now().strftime('%Y') }}"
      translations:
        en:
          responses:
            time: "It's {time}"
            day_of_week: "Today is {day_of_week}"
            date: "Today is {date}"
          weekdays:
            mon: Monday
            tue: Tuesday
            wed: Wednesday
            thu: Thursday
            fri: Friday
            sat: Saturday
            sun: Sunday
          months:
            jan: January
            feb: February
            mar: March
            apr: April
            may: May
            jun: June
            jul: July
            aug: August
            sep: September
            oct: October
            nov: November
            dec: December
        de:
          responses:
            time: "Es ist {time_24h}"
            day_of_week: "Heute ist {day_of_week}"
            date: "Heute ist {day_of_week}, der {day_of_month}. {month} {year}"
          weekdays:
            mon: Montag
            tue: Dienstag
            wed: Mittwoch
            thu: Donnerstag
            fri: Freitag
            sat: Samstag
            sun: Sonntag
          months:
            jan: Januar
            feb: Februar
            mar: März
            apr: April
            may: Mai
            jun: Juni
            jul: Juli
            aug: August
            sep: September
            oct: Oktober
            nov: November
            dec: Dezember
        es:
          responses:
            time: "Son las {time}"
            day_of_week: "Hoy es {day_of_week}"
            date: "Hoy es {date}"
        fr:
          responses:
            time: "Il est {time}"
            day_of_week: "Aujourd'hui, c'est {day_of_week}"
            date: "Aujourd'hui, c'est {date}"
        it:
          responses:
            time: "Sono le {time}"
            day_of_week: "Oggi è {day_of_week}"
            date: "Oggi è {date}"
        nl:
          responses:
            time: "Het is {time}"
            day_of_week: "Vandaag is {day_of_week}"
            date: "Vandaag is {date}"
        uk:
          responses:
            time: "Зараз {time}"
            day_of_week: "Сьогодні {day_of_week}"
            date: "Сьогодні {day_of_week}, {date}"
          weekdays:
            mon: понеділок
            tue: вівторок
            wed: середа
            thu: четвер
            fri: п'ятниця
            sat: субота
            sun: неділя
          months:
            jan: січень
            feb: лютий
            mar: березень
            apr: квітень
            may: травень
            jun: червень
            jul: липень
            aug: серпень
            sep: вересень
            oct: жовтень
            nov: листопад
            dec: грудень
  - choose:
      - conditions:
          - condition: trigger
            id:
              - time
        sequence:
          - variables:
              conversation_response: "{{ translations[language]['responses']['time'].replace('{time}', time) }}"
          - set_conversation_response: "{{ conversation_response }}"
          - action: view_assist.set_state
            target:
              entity_id: "{{ target_satellite_device }}"
            data:
              last_said: "{{ conversation_response }}"
          - if:
              - condition: template
                value_template: >-
                  {% if target_satellite_device_type != 'audio_only' %}true{% else
                  %}false{% endif %}
            then:
              - action: view_assist.navigate
                data:
                  device: "{{ target_satellite_device }}"
                  path: "{{ view }}"
      - conditions:
          - condition: trigger
            id:
              - dayofweek
        sequence:
          - variables:
              day_of_week_short: "{{ now().strftime('%a').lower() }}"
              day_of_week_translated: "{{ translations[language]['weekdays'][day_of_week_short] }}"
              conversation_response: "{{ translations[language]['responses']['day_of_week'].replace('{day_of_week}', day_of_week_translated) }}"
          - set_conversation_response: "{{ conversation_response }}"
          - action: view_assist.set_state
            target:
              entity_id: "{{ target_satellite_device }}"
            data:
              last_said: "{{ conversation_response }}"
          - if:
              - condition: template
                value_template: >-
                  {% if target_satellite_device_type != 'audio_only' %}true{% else
                  %}false{% endif %}
            then:
              - action: view_assist.navigate
                data:
                  device: "{{ target_satellite_device }}"
                  path: "{{ view }}"
      - conditions:
          - condition: trigger
            id:
              - date
        sequence:
          - variables:
              month_short: "{{ now().strftime('%b').lower() }}"
              month_translated: "{{ translations[language]['months'][month_short] }}"
              day_of_week_short: "{{ now().strftime('%a').lower() }}"
              day_of_week_translated: "{{ translations[language]['weekdays'][day_of_week_short] }}"
              conversation_response: "{{ translations[language]['responses']['date'].replace('{date}', date).replace('{day_of_week}', day_of_week_translated).replace('{day_of_month}', day_of_month|string).replace('{month}', month_translated).replace('{year}', year|string) }}"
          - set_conversation_response: "{{ conversation_response }}"
          - action: view_assist.set_state
            target:
              entity_id: "{{ target_satellite_device }}"
            data:
              last_said: "{{ conversation_response }}"
          - if:
              - condition: template
                value_template: >-
                  {% if target_satellite_device_type != 'audio_only' %}true{% else
                  %}false{% endif %}
            then:
              - action: view_assist.navigate
                data:
                  device: "{{ target_satellite_device }}"
                  path: "{{ view }}"
mode: single
